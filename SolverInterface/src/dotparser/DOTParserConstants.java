/* Generated By:JJTree&JavaCC: Do not edit this line. DOTParserConstants.java */
package dotparser;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface DOTParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int SINGLE_LINE_COMMENT = 8;
  /** RegularExpression Id. */
  int MULTI_LINE_COMMENT = 9;
  /** RegularExpression Id. */
  int DIGRAPH = 11;
  /** RegularExpression Id. */
  int EDGE = 12;
  /** RegularExpression Id. */
  int GRAPH = 13;
  /** RegularExpression Id. */
  int NODE = 14;
  /** RegularExpression Id. */
  int STRICT = 15;
  /** RegularExpression Id. */
  int SUBGRAPH = 16;
  /** RegularExpression Id. */
  int EQ = 17;
  /** RegularExpression Id. */
  int LBRACE = 18;
  /** RegularExpression Id. */
  int RBRACE = 19;
  /** RegularExpression Id. */
  int EDGE_UNDIRECTED = 20;
  /** RegularExpression Id. */
  int EDGE_DIRECTED = 21;
  /** RegularExpression Id. */
  int LBRACKET = 22;
  /** RegularExpression Id. */
  int RBRACKET = 23;
  /** RegularExpression Id. */
  int COMMA = 24;
  /** RegularExpression Id. */
  int SEMICOLON = 25;
  /** RegularExpression Id. */
  int ID = 26;
  /** RegularExpression Id. */
  int HTML = 27;
  /** RegularExpression Id. */
  int $HtmlString = 28;
  /** RegularExpression Id. */
  int $BaseChar = 29;
  /** RegularExpression Id. */
  int $Ideographic = 30;
  /** RegularExpression Id. */
  int CombiningChar = 31;
  /** RegularExpression Id. */
  int $Digit = 32;
  /** RegularExpression Id. */
  int Extender = 33;
  /** RegularExpression Id. */
  int $EscapedCharacter = 34;
  /** RegularExpression Id. */
  int $NotWhitespaceNotQuoteNotEscape = 35;
  /** RegularExpression Id. */
  int $Letter = 36;
  /** RegularExpression Id. */
  int $Number = 37;
  /** RegularExpression Id. */
  int $UnquotedString = 38;
  /** RegularExpression Id. */
  int $QuotedString = 39;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int IN_SINGLE_LINE_COMMENT = 1;
  /** Lexical state. */
  int IN_MULTI_LINE_COMMENT = 2;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\"\\f\"",
    "\"//\"",
    "\"/*\"",
    "<SINGLE_LINE_COMMENT>",
    "\"*/\"",
    "<token of kind 10>",
    "\"digraph\"",
    "\"edge\"",
    "\"graph\"",
    "\"node\"",
    "\"strict\"",
    "\"subgraph\"",
    "\"=\"",
    "\"{\"",
    "\"}\"",
    "\"--\"",
    "\"->\"",
    "\"[\"",
    "\"]\"",
    "\",\"",
    "\";\"",
    "<ID>",
    "<HTML>",
    "<$HtmlString>",
    "<$BaseChar>",
    "<$Ideographic>",
    "<CombiningChar>",
    "<$Digit>",
    "<Extender>",
    "<$EscapedCharacter>",
    "<$NotWhitespaceNotQuoteNotEscape>",
    "<$Letter>",
    "<$Number>",
    "<$UnquotedString>",
    "<$QuotedString>",
  };

}
